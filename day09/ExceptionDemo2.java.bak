/*
 异常声明；throws     多异常的例子

 在异常处理时一定要注意
 1. 最好要写出具体的异常方式，越具体越好；
 2. 当出现多个异常的时候，父类的异常要写到最下面，防止出现子类异常以外的异常；
 当父类异常写到异常最上面的时候，就会将具体的子类异常给覆盖掉
 3. 在以后开发的时候，在出现异常的时候用catch捕捉，不要用一个print简单输出(这里只是因为教学做一个简答的示范),其实更多的还是要用日志文件给记录。
*/
class Demo  
{
	int div(int a, int b) throws ArithmeticException, ArrayIndexOutOfBoundsException     // 在throw上声明了可能出现的问题，抛给调用它的类解决     这个除法可能会出现除0的错误
	{
		 
		int[] arr = new int[a];
		System.out.println(arr[4]);
		return a/b;
	}
}

class ExceptionDemo2
{
	public static void main(String[] args)  //throws Exception   // 抛给虚拟机解决
	{
		Demo d = new Demo();
		try
		{
			int div = d.div(4,0);     // 这是一种除0异常，可以解决;    当发生异常的时候，就有 new ArithmeticException    这是一个除0异常的类建立
			System.out.println(div);      // 在抛给虚拟机后就停止运行后面的代码了
		}
		catch (ArithmeticException e)
		{
			System.out.println(e.toString());
			System.out.println("发生除零异常了!");
		}

		catch(ArrayIndexOutOfBoundsException e)
		{
			System.out.println(e.toString());
			System.out.println("发生越界异常啦！");
		}
		 
		System.out.println("code run!");
		 
		
		//System.out.println("Hello World!");

		//byte[] arr = new byte[1024*1024*60000];   分配内存过大
	}
}
